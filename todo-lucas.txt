goals

socketio
	DONE convert all existing communication to socketio
	DONE on Start button-click, randomly choose a song to play and start playing it
	DONE get upvotes working again
		DONE make upvotes only one per ip
		DONE on load page, toggle heart as liked for each song this ip has liked
	DONE choose one of songs with most upvotes to play each time
	DONE remove song from queue after choosing it
	DONE now-playing routing
		DONE Send sid, but push now-playing json.
		DONE The room host sets everything and plays music before sending the event,
			then the others set everything after it goes through the server.
	DONE play and pause routes
	DONE tidy up controller now-playing state architecture and now-playing schema
		DONE add playState to schema
	DONE Combine Begin Playback button with Play button
	streamline NowPlaying initialization with new NowPlaying(json) constructor


DONE then integrate with google play api
	DONE if time: pre-create structure so that all that needs to happen is the library be provided

DONE Record album url as part of backend nowPlaying so that clients get it on connect
DONE Remove IP tracking for likes
	refreshing the page should forget all your likes
DONE Send nowPlaying:none when queue runs out
clear now playing when host connects
	or clear now playing when host disconnects?
Whenever no song is playing, it should say No Current Song.
Synchronization (like radio)

Frontend stuff
	Seek bar
	song info on hover

Maybe later
	add album to song display, that will solve much of the problem of duplicates
	host admin privileges
		remove songs, queue songs
	allow clients to ctrl music
	build room creation / multiple rooms
